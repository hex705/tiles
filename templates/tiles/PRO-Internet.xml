<template>

<!-- this can be used to create incremental variables for each instance of this 
     template attached to the same hub --> 
<counter>$UDP_COUNT</counter>

<!-- this will always get included once per hub, for each instances of this tile --> 
<unique> 
	<imports>
	import netP5.*;
	</imports>
	<variables>	
	</variables>
	<setup>
	</setup>
	<loop></loop>
	<functions></functions>	
</unique>

<!-- this will always get included in the template --> 
<always>
	<imports></imports>
	<variables>		
	</variables>
	<setup>
    </setup>
    <loop></loop>
	<functions></functions>
</always>

<!-- this will get overwritten by subsequent tiles --> 
<default>
	<variables>
	UdpServer me;
	int myPort = 12000; 
	
	UdpClient destination$UDP_COUNT;
	// this is the IP address of a device you are trying to reach; you will need
	// to set this 
	String destIP$UDP_COUNT = "192.168.100.$UDP_COUNT"; 
	// this is the port the other device is listening on; you will need to set this as well
	int destPort$UDP_COUNT = 1200$UDP_COUNT; 
    </variables>
	
	<setup>
	me = new UdpServer(this, myPort);  
	destination$UDP_COUNT = new UdpClient(destIP$UDP_COUNT, destPort$UDP_COUNT);	   
	</setup>
	
	<loop>
	</loop>
	
	<functions>
	void keyPressed() {
  	  println("Sending data: " + key); 
	  // The data has to be sent as an array of bytes -- UDP is pretty low level 
	  byte[] data = new byte[1];
      data[0] = (byte)key; // sending the ASCII code of the last key pressed as an example 
      destination$UDP_COUNT.send(data);
    }

	void netEvent( NetMessage msg ) {
	  println("Received data");  
	  byte[] data = msg.getData();
	  // print both the raw byte data and the data converted back to a character
	  println(data[0] + " -> " + (char)data[0]);  
	}	
	</functions>
</default>

</template>